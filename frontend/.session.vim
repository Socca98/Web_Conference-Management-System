" ~\Documents\Projects\COVID-19\frontend\.session.vim:
" Vim session script.
" Created by session.vim 2.13.1 on 12 May 2020 at 21:14:32.
" Open this file in Vim and run :source % to restore your session.

let g:Wintabs_session_string = '{''1'': {''1'': [''C:\Users\ajecc\Documents\Projects\COVID-19\frontend\src\app\pages\home-page\home-page.component.ts''], ''2'': [''C:\Users\ajecc\Documents\Projects\COVID-19\frontend\src\app\shared\services\submissions.service.ts'']}}'
let g:Wintabs_undo_string = '[''C:\Users\ajecc\Documents\Projects\COVID-19\frontend\src\app\shared\services\conferences.service.spec.ts'']'
if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'gruvbox' | colorscheme gruvbox | endif
call setqflist([])
let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Documents/Projects/COVID-19/frontend
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +23 src/app/shared/services/submissions.service.ts
badd +71 src/app/pages/home-page/home-page.component.ts
argglobal
%argdel
$argadd .
edit src/app/pages/home-page/home-page.component.ts
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd w
set nosplitbelow
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 20 + 21) / 42)
exe '2resize ' . ((&lines * 19 + 21) / 42)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let s:l = 39 - ((0 * winheight(0) + 10) / 20)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
39
normal! 0
wincmd w
argglobal
if bufexists("src/app/shared/services/submissions.service.ts") | buffer src/app/shared/services/submissions.service.ts | else | edit src/app/shared/services/submissions.service.ts | endif
if &buftype ==# 'terminal'
  silent file src/app/shared/services/submissions.service.ts
endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let s:l = 23 - ((11 * winheight(0) + 9) / 19)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
23
normal! 083|
wincmd w
2wincmd w
exe '1resize ' . ((&lines * 20 + 21) / 42)
exe '2resize ' . ((&lines * 19 + 21) / 42)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOF
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

2wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
